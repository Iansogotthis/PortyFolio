{"version":3,"file":"static/js/615.6f5dd8f4.chunk.js","mappings":"iKAgHA,QA9GA,WACE,MAAOA,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,QAAS,MAGJC,EAAiBC,IAAsBL,EAAAA,EAAAA,UAAS,IAEjDM,EAAgBC,IACpB,MAAM,KAAEN,EAAI,MAAEO,GAAUD,EAAEE,OAC1BV,EAAY,IAAKD,EAAU,CAACG,GAAOO,GAAQ,EA+B7C,OACEE,EAAAA,EAAAA,MAAA,WAASC,GAAG,UAASC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,UAAW,UAAWH,SAAC,kBACpCC,EAAAA,EAAAA,KAAA,UAEAH,EAAAA,EAAAA,MAAA,MAAIM,UAAU,gBAAeJ,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,KAAGO,KAAK,kCAAiCL,SAAA,CAAC,UAExCC,EAAAA,EAAAA,KAAA,OAAKK,IAAI,kBAAkBC,IAAI,cAAcL,MAAO,CAAEM,MAAO,OAAQC,OAAQ,gBAGjFR,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,KAAGO,KAAK,4CAA2CL,SAAA,CAAC,YAElDC,EAAAA,EAAAA,KAAA,OAAKK,IAAI,oBAAoBC,IAAI,gBAAgBL,MAAO,CAAEM,MAAO,OAAQC,OAAQ,mBAIvFR,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,OAAKF,GAAG,kBAAiBC,SAAER,IAAmBS,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,OAElDM,EAAAA,EAAAA,MAAA,QAAMM,UAAU,eAAeL,GAAG,cAAcW,SAnD/BC,UACnBhB,EAAEiB,iBACF,MAAMC,EAAOlB,EAAEE,OAEf,WACyBiB,MAAM,kCAAmC,CAC9DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB9B,KAAMH,EAASG,KACfC,MAAOJ,EAASI,MAChBC,QAASL,EAASK,aAIT6B,IACX3B,EAAmB,4DACnBoB,EAAKQ,SAEL5B,EAAmB,sDAEvB,CAAE,MAAO6B,GACP7B,EAAmB,iDACrB,GA0ByEO,SAAA,EACrEC,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,OAAMvB,SAAC,WACtBC,EAAAA,EAAAA,KAAA,SACEC,MAAO,CAAEC,UAAW,SAAUqB,OAAQ,mBACtCC,KAAK,OACL1B,GAAG,OACHV,KAAK,OACLe,UAAU,iBACVsB,YAAY,OACZ9B,MAAOV,EAASG,KAChBsC,SAAUjC,EACVkC,UAAQ,KAGV3B,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,QAAOvB,SAAC,YACvBC,EAAAA,EAAAA,KAAA,SACEC,MAAO,CAAEC,UAAW,SAAUqB,OAAQ,mBACtCC,KAAK,QACL1B,GAAG,QACHV,KAAK,QACLe,UAAU,iBACVsB,YAAY,QACZ9B,MAAOV,EAASI,MAChBqC,SAAUjC,EACVkC,UAAQ,KAGV3B,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,UAASvB,SAAC,cACzBC,EAAAA,EAAAA,KAAA,YACEC,MAAO,CAAEC,UAAW,SAAUqB,OAAQ,mBACtCzB,GAAG,UACHV,KAAK,UACLe,UAAU,iBACVsB,YAAY,UACZ9B,MAAOV,EAASK,QAChBoC,SAAUjC,EACVkC,UAAQ,KAGV3B,EAAAA,EAAAA,KAAA,UAAQwB,KAAK,SAASrB,UAAU,gBAAeJ,SAAC,sBAIxD,C","sources":["pages/Contact.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Contact() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    message: '',\r\n  });\r\n\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n\r\n    try {\r\n      const response = await fetch('https://formspree.io/f/mqkrwqzn', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: formData.name,\r\n          email: formData.email,\r\n          message: formData.message,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setResponseMessage('Thank you for your message! I will get back to you soon.');\r\n        form.reset();\r\n      } else {\r\n        setResponseMessage('Oops! Something went wrong. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      setResponseMessage('Error sending message. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section id=\"contact\">\r\n      <h2 style={{ textAlign: 'center' }}>Get in Touch</h2>\r\n      <br />\r\n\r\n      <ul className=\"contact-links\">\r\n        <li>\r\n          <a href=\"https://github.com/Iansogotthis\">\r\n            GitHub\r\n            <img src=\"/images/git.jpg\" alt=\"GitHub Logo\" style={{ width: '16px', height: '16px' }} />\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"http://www.linkedin.com/in/webdevwonder88\">\r\n            LinkedIn\r\n            <img src=\"/images/linkd.png\" alt=\"LinkedIn Logo\" style={{ width: '16px', height: '16px' }} />\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      <br />\r\n\r\n      <div id=\"responseMessage\">{responseMessage && <p>{responseMessage}</p>}</div>\r\n\r\n      <form className=\"contact-form\" id=\"contactForm\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          style={{ textAlign: 'center', border: '2px solid white' }}\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          className=\"feedback-input\"\r\n          placeholder=\"Name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          style={{ textAlign: 'center', border: '2px solid white' }}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          className=\"feedback-input\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"message\">Message:</label>\r\n        <textarea\r\n          style={{ textAlign: 'center', border: '2px solid white' }}\r\n          id=\"message\"\r\n          name=\"message\"\r\n          className=\"feedback-input\"\r\n          placeholder=\"Comment\"\r\n          value={formData.message}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className=\"submit-button\">Send Message</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n"],"names":["formData","setFormData","useState","name","email","message","responseMessage","setResponseMessage","handleChange","e","value","target","_jsxs","id","children","_jsx","style","textAlign","className","href","src","alt","width","height","onSubmit","async","preventDefault","form","fetch","method","headers","body","JSON","stringify","ok","reset","error","htmlFor","border","type","placeholder","onChange","required"],"sourceRoot":""}